/*
http://acmp.ru/index.asp?main=task&id_task=208
Легендарный учитель математики Юрий Петрович придумал забавную игру с числами. А именно, взяв произвольное целое число, он переводит его в двоичную систему счисления, получая некоторую последовательность из нулей и единиц, начинающуюся с единицы. (Например, десятичное число 1910 = 1*24+0*23+0*22+1*21+1*20 в двоичной системе запишется как 100112.) Затем учитель начинает сдвигать цифры полученного двоичного числа по циклу (так, что последняя цифра становится первой, а все остальные сдвигаются на одну позицию вправо), выписывая образующиеся при этом последовательности из нулей и единиц в столбик — он подметил, что независимо от выбора исходного числа получающиеся последовательности начинают с некоторого момента повторяться. И, наконец, Юрий Петрович отыскивает максимальное из выписанных чисел и переводит его обратно в десятичную систему счисления, считая это число результатом проделанных манипуляций. Так, для числа 19 список последовательностей будет таким: 
10011
11001
11100
01110
00111
10011
…
и результатом игры, следовательно, окажется число 1*24+1*23+1*22+0*21+0*20 = 28.

Поскольку придуманная игра с числами все больше занимает воображение учителя, отвлекая тем самым его от работы с ну очень одаренными школьниками, Вас просят написать программу, которая бы помогла Юрию Петровичу получать результат игры без утомительных ручных вычислений.

Входные данные
Входной файл INPUT.TXT содержит одно целое число N (0 ≤ N ≤ 32767).

Выходные данные
Ваша программа должна вывести в выходной файл OUTPUT.TXT одно целое число, равное результату игры.
*/
import java.util.*;
import java.io.*;
public class Main{
    public static void main(String[] args) throws IOException{
        new Main().run();
    }
    PrintWriter pw;
    Scanner sc;
    public void run() throws IOException{
        sc = new Scanner(new File("input.txt"));
        pw = new PrintWriter(new File("output.txt"));
 
        int N = sc.nextInt();
        char binary[] = Integer.toBinaryString(N).toCharArray();
 
        int max = -1;
        for(int i=0; i<binary.length; i++){
            sdvig(binary);
            int curr = Integer.parseInt(String.valueOf(binary), 2);
            if (curr > max) max = curr;
        }
        pw.println(max);
        pw.close();
    }
 
    private void sdvig(char[] arr){
        char first = arr[0];
        for(int i=1; i<arr.length; i++){
            arr[i-1] = arr[i];
        }
        arr[arr.length-1] = first;
    }
 
}