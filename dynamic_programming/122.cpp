/*
http://acmp.ru/index.asp?main=task&id_task=120
В прямоугольной таблице N×M (в каждой клетке которой записано некоторое число) в начале игрок находится в левой верхней клетке. За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено). При проходе через клетку с игрока берут столько у.е., какое число записано в этой клетке (деньги берут также за первую и последнюю клетки его пути).

Требуется найти минимальную сумму у.е., заплатив которую игрок может попасть в правый нижний угол.

Входные данные
Во входном файле INPUT.TXT задано два числа N и M - размеры таблицы (1 ≤ N ≤ 20, 1 ≤ M ≤ 20). Затем идет N строк по M чисел в каждой - размеры штрафов в у.е. за прохождение через соответствующие клетки (числа от 0 до 100).

Выходные данные
В выходной файл OUTPUT.TXT выведите минимальную сумму, потратив которую можно попасть в правый нижний угол.
*/

#include <iostream>
#include <fstream>
using namespace std;

int main()
{
   ifstream fin("INPUT.txt");
   ofstream fout("OUTPUT.txt");
   int arr[20][20];
   int i,j,n,m;
   fin>>n>>m;
   for (i=0; i<n; i++)
      for (j=0; j<m; j++)
         fin>>arr[i][j];
   int mas[20][20];
   mas[0][0]=arr[0][0];
   for (i=1; i<m; i++)
      mas[0][i]=arr[0][i]+mas[0][i-1];
   for (j=1; j<n; j++)
      mas[j][0]=arr[j][0]+mas[j-1][0];
 
   for (i=1; i<n; i++)
      for (j=1; j<m; j++){
         if (mas[i][j-1]<mas[i-1][j])
            mas[i][j] = arr[i][j]+mas[i][j-1];
         else
            mas[i][j] = arr[i][j]+mas[i-1][j];
      }
 
   fout<<mas[n-1][m-1];
 
   fin.close();
   fout.close();
   return 0;
}